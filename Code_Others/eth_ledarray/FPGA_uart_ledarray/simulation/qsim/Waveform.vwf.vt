// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/04/2022 11:15:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          top
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module top_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk_50M;
reg uart_rx;
// wires                                               
wire led_A;
wire led_B;
wire led_C;
wire led_CLK;
wire led_D;
wire led_DI;
wire led_G;
wire led_LAT;

// assign statements (if any)                          
top i1 (
// port map - connection between master ports and signals/registers   
	.clk_50M(clk_50M),
	.led_A(led_A),
	.led_B(led_B),
	.led_C(led_C),
	.led_CLK(led_CLK),
	.led_D(led_D),
	.led_DI(led_DI),
	.led_G(led_G),
	.led_LAT(led_LAT),
	.uart_rx(uart_rx)
);
initial 
begin 
#100000000 $finish;
end 

// clk_50M
always
begin
	clk_50M = 1'b0;
	clk_50M = #5000 1'b1;
	#5000;
end 
endmodule

