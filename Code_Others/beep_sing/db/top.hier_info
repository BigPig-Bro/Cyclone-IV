|beep_top
clk => clk.IN1
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => song_index.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => state.OUTPUTSELECT
rst_n => data_long[3].ENA
rst_n => data_long[2].ENA
rst_n => data_long[1].ENA
rst_n => data_long[0].ENA
rst_n => state_delay[31].ENA
rst_n => state_delay[30].ENA
rst_n => state_delay[29].ENA
rst_n => state_delay[28].ENA
rst_n => state_delay[27].ENA
rst_n => state_delay[26].ENA
rst_n => state_delay[25].ENA
rst_n => state_delay[24].ENA
rst_n => state_delay[23].ENA
rst_n => state_delay[22].ENA
rst_n => state_delay[21].ENA
rst_n => state_delay[20].ENA
rst_n => state_delay[19].ENA
rst_n => state_delay[18].ENA
rst_n => state_delay[17].ENA
rst_n => state_delay[16].ENA
rst_n => state_delay[15].ENA
rst_n => state_delay[14].ENA
rst_n => state_delay[13].ENA
rst_n => state_delay[12].ENA
rst_n => state_delay[11].ENA
rst_n => state_delay[10].ENA
rst_n => state_delay[9].ENA
rst_n => state_delay[8].ENA
rst_n => state_delay[7].ENA
rst_n => state_delay[6].ENA
rst_n => state_delay[5].ENA
rst_n => state_delay[4].ENA
rst_n => state_delay[3].ENA
rst_n => state_delay[2].ENA
rst_n => state_delay[1].ENA
rst_n => state_delay[0].ENA
rst_n => song_data_start.ENA
rst_n => data_high[3].ENA
rst_n => data_high[2].ENA
rst_n => data_high[1].ENA
rst_n => data_high[0].ENA
rst_n => data_level[3].ENA
rst_n => data_level[2].ENA
rst_n => data_level[1].ENA
rst_n => data_level[0].ENA
key => key.IN1
beep_out <= beep_driver:beep_driver_m0.beep


|beep_top|key:key_m0
clk => clk_delay[0].CLK
clk => clk_delay[1].CLK
clk => clk_delay[2].CLK
clk => clk_delay[3].CLK
clk => clk_delay[4].CLK
clk => clk_delay[5].CLK
clk => clk_delay[6].CLK
clk => clk_delay[7].CLK
clk => clk_delay[8].CLK
clk => clk_delay[9].CLK
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => cnt.OUTPUTSELECT
key_in => key_clk.ENA
key_cnt[0] <= key_cnt[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_cnt[1] <= key_cnt[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|beep_top|beep_driver:beep_driver_m0
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => beep~reg0.CLK
clk => done~reg0.CLK
clk => mic[0].CLK
clk => mic[1].CLK
clk => mic[2].CLK
clk => mic[3].CLK
clk => mic[4].CLK
clk => mic[5].CLK
clk => mic[6].CLK
clk => mic[7].CLK
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => clk_1Mhz_cnt[0].CLK
clk => clk_1Mhz_cnt[1].CLK
clk => clk_1Mhz_cnt[2].CLK
clk => clk_1Mhz_cnt[3].CLK
clk => clk_1Mhz_cnt[4].CLK
clk => clk_1Mhz_cnt[5].CLK
clk => clk_1Mhz_cnt[6].CLK
clk => clk_1Mhz_cnt[7].CLK
clk => clk_1Mhz_cnt[8].CLK
clk => clk_1Mhz_cnt[9].CLK
clk => clk_1Mhz_cnt[10].CLK
clk => clk_1Mhz_cnt[11].CLK
clk => clk_1Mhz_cnt[12].CLK
clk => clk_1Mhz_cnt[13].CLK
clk => clk_1Mhz_cnt[14].CLK
clk => clk_1Mhz_cnt[15].CLK
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => state.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => mic.OUTPUTSELECT
start => Selector4.IN0
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
high[0] => mic.DATAB
high[1] => Add2.IN12
high[2] => Add2.IN11
high[3] => Add2.IN10
long[0] => Div0.IN23
long[1] => Div0.IN22
long[2] => Div0.IN21
long[3] => Div0.IN20
level[0] => Add1.IN8
level[0] => Add2.IN14
level[1] => Add1.IN7
level[1] => Add2.IN13
level[2] => Add1.IN5
level[2] => Add1.IN6
level[3] => Add1.IN3
level[3] => Add1.IN4
beep <= beep~reg0.DB_MAX_OUTPUT_PORT_TYPE


