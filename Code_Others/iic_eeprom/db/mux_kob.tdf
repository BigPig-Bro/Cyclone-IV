--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=18 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 20.1 cbx_lpm_mux 2020:11:11:17:06:45:SJ cbx_mgl 2020:11:11:17:08:38:SJ  VERSION_END


-- Copyright (C) 2020  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 18 
SUBDESIGN mux_kob
( 
	data[35..0]	:	input;
	result[17..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[17..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data325w[1..0]	: WIRE;
	w_data339w[1..0]	: WIRE;
	w_data351w[1..0]	: WIRE;
	w_data363w[1..0]	: WIRE;
	w_data375w[1..0]	: WIRE;
	w_data387w[1..0]	: WIRE;
	w_data399w[1..0]	: WIRE;
	w_data411w[1..0]	: WIRE;
	w_data423w[1..0]	: WIRE;
	w_data435w[1..0]	: WIRE;
	w_data447w[1..0]	: WIRE;
	w_data459w[1..0]	: WIRE;
	w_data471w[1..0]	: WIRE;
	w_data483w[1..0]	: WIRE;
	w_data495w[1..0]	: WIRE;
	w_data507w[1..0]	: WIRE;
	w_data519w[1..0]	: WIRE;
	w_data531w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data531w[1..1]) # ((! sel_node[]) & w_data531w[0..0])), ((sel_node[] & w_data519w[1..1]) # ((! sel_node[]) & w_data519w[0..0])), ((sel_node[] & w_data507w[1..1]) # ((! sel_node[]) & w_data507w[0..0])), ((sel_node[] & w_data495w[1..1]) # ((! sel_node[]) & w_data495w[0..0])), ((sel_node[] & w_data483w[1..1]) # ((! sel_node[]) & w_data483w[0..0])), ((sel_node[] & w_data471w[1..1]) # ((! sel_node[]) & w_data471w[0..0])), ((sel_node[] & w_data459w[1..1]) # ((! sel_node[]) & w_data459w[0..0])), ((sel_node[] & w_data447w[1..1]) # ((! sel_node[]) & w_data447w[0..0])), ((sel_node[] & w_data435w[1..1]) # ((! sel_node[]) & w_data435w[0..0])), ((sel_node[] & w_data423w[1..1]) # ((! sel_node[]) & w_data423w[0..0])), ((sel_node[] & w_data411w[1..1]) # ((! sel_node[]) & w_data411w[0..0])), ((sel_node[] & w_data399w[1..1]) # ((! sel_node[]) & w_data399w[0..0])), ((sel_node[] & w_data387w[1..1]) # ((! sel_node[]) & w_data387w[0..0])), ((sel_node[] & w_data375w[1..1]) # ((! sel_node[]) & w_data375w[0..0])), ((sel_node[] & w_data363w[1..1]) # ((! sel_node[]) & w_data363w[0..0])), ((sel_node[] & w_data351w[1..1]) # ((! sel_node[]) & w_data351w[0..0])), ((sel_node[] & w_data339w[1..1]) # ((! sel_node[]) & w_data339w[0..0])), ((sel_node[] & w_data325w[1..1]) # ((! sel_node[]) & w_data325w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data325w[] = ( data[18..18], data[0..0]);
	w_data339w[] = ( data[19..19], data[1..1]);
	w_data351w[] = ( data[20..20], data[2..2]);
	w_data363w[] = ( data[21..21], data[3..3]);
	w_data375w[] = ( data[22..22], data[4..4]);
	w_data387w[] = ( data[23..23], data[5..5]);
	w_data399w[] = ( data[24..24], data[6..6]);
	w_data411w[] = ( data[25..25], data[7..7]);
	w_data423w[] = ( data[26..26], data[8..8]);
	w_data435w[] = ( data[27..27], data[9..9]);
	w_data447w[] = ( data[28..28], data[10..10]);
	w_data459w[] = ( data[29..29], data[11..11]);
	w_data471w[] = ( data[30..30], data[12..12]);
	w_data483w[] = ( data[31..31], data[13..13]);
	w_data495w[] = ( data[32..32], data[14..14]);
	w_data507w[] = ( data[33..33], data[15..15]);
	w_data519w[] = ( data[34..34], data[16..16]);
	w_data531w[] = ( data[35..35], data[17..17]);
END;
--VALID FILE
