// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "10/23/2022 00:19:00"
                                                                                
// Verilog Test Bench template for design : LCD12864_top
// 
`timescale 1 ns/ 1 ns
module LCD12864_top_vlg_tst();
// test vector input registers
reg clk;
reg rst_n;
// wires                                               
wire [7:0]  LCD_DAT;
wire LCD_E;
wire LCD_PSB;
wire LCD_RS;
wire LCD_RST;
wire LCD_RW;

// assign statements (if any)                          
LCD12864_top i1 (
// port map - connection between master ports and signals/registers   
	.LCD_DAT(LCD_DAT),
	.LCD_E(LCD_E),
	.LCD_PSB(LCD_PSB),
	.LCD_RS(LCD_RS),
	.LCD_RST(LCD_RST),
	.LCD_RW(LCD_RW),
	.clk(clk),
	.rst_n(rst_n)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
clk = 0;
rst_n= 1;

#100000000 $stop;                                                       
// --> end                                             
$display("Running testbench");                       
end                                                    
always #5 clk = ~clk;                                              
endmodule

